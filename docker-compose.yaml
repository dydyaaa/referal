services:
  referral_db:
    container_name: referral_db
    image: postgres:14.3-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis_codes:
    container_name: redis_codes
    image: redis:7.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  api:
    container_name: referral_api
    build: .
    restart: always
    depends_on:
      - referral_db
      - redis_codes
      - db_migration
    ports:
      - "5000:5000"
    command: ["gunicorn", "-w", "4", "--worker-class", "gevent", "--max-requests", "1000", "--max-requests-jitter", "50", "-b", "0.0.0.0:5000", "wsgi:app"]

  celery_worker:
    container_name: referral_celery
    build: .
    restart: always
    depends_on:
      - referral_db
      - redis_codes
    command: ["celery", "-A", "app.app_factory.celery", "worker", "--loglevel=info"]

  db_migration:
    build: .
    container_name: db_migration
    depends_on:
      - referral_db
    command: >
      bash -c "flask db upgrade"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - 9100:9100

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  redis_data: